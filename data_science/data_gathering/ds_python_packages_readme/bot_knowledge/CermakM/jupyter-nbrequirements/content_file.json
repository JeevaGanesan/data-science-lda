{"results": {"content_files": {"name": "README.md", "path": "README.md", "content": "# jupyter-nbrequirements &nbsp;[![License](https://img.shields.io/github/license/mashape/apistatus.svg?label=License)](https://github.com/CermakM/jupyter-nbrequirements/blob/master/LICENSE)\n\n[![Dependabot Status](https://api.dependabot.com/badges/status?host=github&repo=CermakM/jupyter-nbrequirements)](https://dependabot.com)\n[![Node CI](https://github.com/cermakm/jupyter-nbrequirements/workflows/Node%20CI/badge.svg)](https://github.com/cermakm/jupyter-nbrequirements/actions) &nbsp;\n[![Release](https://img.shields.io/github/v/tag/cermakm/jupyter-nbrequirements.svg?sort=semver&label=Release)](https://github.com/CermakM/jupyter-nbrequirements/releases/latest)\n\n\n\nDependency management and optimization in Jupyter Notebooks.\n\n<br>\n\n## About\n\nThis extension provides control over the notebook dependencies.\n\nThe main goals of the project are the following:\n\n  - manage notebook requirements without leaving the notebook\n  - provide a unique and optimized* environment for each notebook\n\n*The requirements are optimized using the [Thoth] resolution engine\n\n<br>\n\n## Installation\n\n```bash\npip install jupyter-nbrequirements\n```\n\nAnd enable the required extensions (might not be needed with the latest version, but to be sure..)\n\n```bash\njupyter nbextension install --user --py jupyter_nbrequirements\n```\n\n<br>\n\n## Usage\n\n#### NBRequirements UI\n\nSince [v0.4.0](https://github.com/CermakM/jupyter-nbrequirements/releases/tag/v0.4.0), we've introduced a new UI! Check it out, interact with it and see what it can offer you!\n\n<div style=\"text-align:center\">\n<img alt=\"NBRequirements UI\" src=\"https://raw.githubusercontent.com/CermakM/jupyter-nbrequirements/master/assets/ui.png\">\n</div>\n\nOur development efforts will from now on focus primarily on improving the UI.\n\n#### The old-school approach\n\nThe Jupyter magic is in sync with the UI, so don't worry old schoolers, you can still run the commands manually and the existing notebooks will work!\n\n#### Create the environment for the notebook to run in\n\nSay we want to do an EDA, we will probably need [pandas](https://pandas.pydata.org), a visualization library like [plotly](https://plot.ly) and some additional libraries to make our lives easier, like [sklearn](https://scikit-learn.org/stable/) and [pandas-profiling](https://github.com/pandas-profiling/pandas-profiling).\n\nIn a Jupyter notebook cell:\n\n```\n%dep add pandas --version \">=0.24.0\"\n%dep add plotly\n%dep add sklearn\n%dep add pandas-profiling\n```\n\nAnd perhaps our code would need some refactoring and linter checks later on, so let's add a `dev` dependency.\n\n```\n%dep add --dev black\n```\n\nYou can now check the requirements that your notebook has by issuing `%requirements` (or `%dep`, which is just an alias for it) command:\n\n```\n%requirements\n```\n```\n[packages]\npandas = \">=0.24.0\"\nplotly = \"*\"\nsklearn = \"*\"\npandas-profiling = \"*\"\n\n[dev-packages]\nblack = \"*\"\n\n[[source]]\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[requires]\npython_version = \"3.6\"\n```\n\nUp to this point, we've been working only with the metadata. In order to create the environment and actually install the dependencies, you run the `%dep ensure` command (insipired by the golang's [dep](https://github.com/golang/dep), for those familiar with Golang).\n\n```\n%dep ensure\n```\n\n> Since this project is still under development and it uses the [Thoth] resolution engine to optimize the notebook dependencies (which is also still under development as well), in case something goes wrong, `ensure` accepts the `engine` parameter, which can be set to `pipenv`\n\n```\n%dep ensure --engine pipenv\n```\n\nCheck out the [examples](/examples/) for more info.\n\n<br>\n\n## Future plans:\n\nSee the [Project Board](https://github.com/CermakM/jupyter-nbrequirements/projects).\n\n<br>\n\n---\n\n> Author: Marek Cermak <macermak@redhat.com>, @AICoE - Project Thoth\n\n\n<!-- References -->\n\n[Thoth]: https://github.com/thoth-station\n"}}}