{"results": {"content_files": {"name": "README.md", "path": "README.md", "content": "# Jupyter DataTables\n\n<a href=\"https://mybinder.org/v2/gh/CermakM/jupyter-datatables/master?filepath=examples%2Fjupyter-datatables-0.4.0.ipynb\"\n   target=\"_parent\">\n   <img align=\"left\"\n      src=\"https://mybinder.org/badge_logo.svg\">\n</a>\n<a href=\"https://nbviewer.jupyter.org/github/CermakM/jupyter-datatables/blob/master/examples/\"\n   target=\"_parent\">\n   <img\n      src=\"https://raw.githubusercontent.com/jupyter/design/master/logos/Badges/nbviewer_badge.png\"\n      width=\"109\" height=\"20\">\n</a>\n\nJupyter Notebook extension to leverage pandas DataFrames by integrating DataTables JS.\n\n\n\n<br>\n\n#### About\n\nData scientists and in fact many developers work with `pd.DataFrame` on daily basis to interpret data to process them. In my typical workflow. The common workflow is to display the dataframe, take a look at the data schema and then produce multiple plots to check the distribution of the data to have a clearer picture, perhaps search some data in the table, etc...\n\nWhat if those distribution plots were part of the standard DataFrame and we had the ability to quickly search through the table with minimal effort? What if it was the default representation?\n\nThe jupyter-datatables uses [jupyter-require](https://github.com/CermakM/jupyter-require) to draw the table.\n\n<br>\n\n#### Installation\n\n```bash\npip install jupyter-datatables\n```\n\n<br>\n\n#### Usage\n\n```python\nimport numpy as np\nimport pandas as pd\n\nfrom jupyter_datatables import init_datatables_mode\n\ninit_datatables_mode()\n```\n\nThat's it, your default pandas representation will now use Jupyter DataTables!\n\n```python\ndf = pd.DataFrame(np.abs(np.random.randn(50, 5)), columns=list(string.ascii_uppercase[:5]))\n```\n\n![Jupyter Datatables table representation](https://raw.github.com/CermakM/jupyter-datatables/master/assets/images/jupyter-datatables.png)\n\n<br>\n\nIn most cases, you don't need to worry too much about the size of your data. Jupyter DataTables **calculates required sample size** based on a confidence interval (by default this would be `0.95`) and margin of error and ceils it to the highest 'smart' value.\n\nFor example, for a data containing `100,000` samples, given `0.975` confidence interval and `0.02` margin of error, the Jupyter DataTables would calculate that `3044` samples are required and it would round it up to `4000`.\n\n![Jupyter Datatables long table sample size](https://raw.github.com/CermakM/jupyter-datatables/master/assets/images/jupyter-datatables-long.png)\n\nWith additional note:\n\n> Sample size: 4,000 out of 100,000\n\n<br>\n\nWe can also handle wide tables with ease.\n\n```python\ndf = pd.DataFrame(np.abs(np.random.randn(50, 20)), columns=list(string.ascii_uppercase[:20]))\n```\n\n![Jupyter Datatables wide table representation](https://raw.github.com/CermakM/jupyter-datatables/master/assets/images/jupyter-datatables-wide.gif)\n\n<br>\n\nAs per 0.3.0, there is a support for **interactive tooltips**:\n\n![Jupyter Datatables wide table representation](https://raw.github.com/CermakM/jupyter-datatables/master/assets/images/jupyter-datatables-tooltips.gif)\n\n\nAnd also support for custom indices including `Date` type:\n\n```python\ndft = pd.DataFrame({'A': np.random.rand(5),\n                    'B': [1, 1, 3, 2, 1],\n                    'C': 'This is a very long sentence that should automatically be trimmed',\n                    'D': [pd.Timestamp('20010101'), pd.Timestamp('20010102'), pd.Timestamp('20010103'), pd.Timestamp('20010104'), pd.Timestamp('20010105')],\n                    'E': pd.Series([1.0] * 5).astype('float32'),\n                    'F': [False, True, False, False, True],\n                   })\n\ndft.D = dft.D.apply(pd.to_datetime)\ndft.set_index('D', inplace=True)\n```\n\n![Jupyter Datatables wide table representation](https://raw.github.com/CermakM/jupyter-datatables/master/assets/images/jupyter-datatables-datetime-tooltips.gif)\n\n---\n\n<br>\n\n#### Current status and future plans:\n\nCheck out the [Project Board](https://github.com/users/CermakM/projects/1) where we track issues and TODOs for our Jupyter tooling!\n\n---\n\n> Author: Marek Cermak <macermak@redhat.com>, @AICoE\n"}}}