{"results": {"content_files": {"name": "README.rst", "path": "README.rst", "content": ".. image:: https://cdn.rawgit.com/pymc-devs/pymc3/master/docs/logos/svg/PyMC3_banner.svg\n    :height: 100px\n    :alt: PyMC3 logo\n    :align: center\n\n|Build Status| |Coverage| |NumFOCUS_badge| |Binder| |Dockerhub|\n\nPyMC3 is a Python package for Bayesian statistical modeling and Probabilistic Machine Learning\nfocusing on advanced Markov chain Monte Carlo (MCMC) and variational inference (VI)\nalgorithms. Its flexibility and extensibility make it applicable to a\nlarge suite of problems.\n\nCheck out the `getting started guide <http://docs.pymc.io/notebooks/getting_started>`__,  or\n`interact with live examples <https://mybinder.org/v2/gh/pymc-devs/pymc3/master?filepath=%2Fdocs%2Fsource%2Fnotebooks>`__\nusing Binder!\n\nFeatures\n========\n\n-  Intuitive model specification syntax, for example, ``x ~ N(0,1)``\n   translates to ``x = Normal('x',0,1)``\n-  **Powerful sampling algorithms**, such as the `No U-Turn\n   Sampler <http://www.jmlr.org/papers/v15/hoffman14a.html>`__, allow complex models\n   with thousands of parameters with little specialized knowledge of\n   fitting algorithms.\n-  **Variational inference**: `ADVI <http://www.jmlr.org/papers/v18/16-107.html>`__\n   for fast approximate posterior estimation as well as mini-batch ADVI\n   for large data sets.\n-  Relies on `Theano <http://deeplearning.net/software/theano/>`__ which provides:\n    *  Computation optimization and dynamic C compilation\n    *  Numpy broadcasting and advanced indexing\n    *  Linear algebra operators\n    *  Simple extensibility\n-  Transparent support for missing value imputation\n\nGetting started\n===============\n\nIf you already know about Bayesian statistics:\n----------------------------------------------\n\n\n-  `API quickstart guide <http://docs.pymc.io/notebooks/api_quickstart>`__\n-  The `PyMC3 tutorial <http://docs.pymc.io/notebooks/getting_started>`__\n-  `PyMC3 examples <https://docs.pymc.io/nb_examples/index.html>`__ and the `API reference <http://docs.pymc.io/api>`__\n\n\n\nLearn Bayesian statistics with a book together with PyMC3:\n----------------------------------------------------------\n\n-  `Probabilistic Programming and Bayesian Methods for Hackers <https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers>`__: Fantastic book with many applied code examples.\n-  `PyMC3 port of the book \"Doing Bayesian Data Analysis\" by John Kruschke <https://github.com/aloctavodia/Doing_bayesian_data_analysis>`__ as well as the `second edition <https://github.com/JWarmenhoven/DBDA-python>`__: Principled introduction to Bayesian data analysis.\n-  `PyMC3 port of the book \"Statistical Rethinking A Bayesian Course with Examples in R and Stan\" by Richard McElreath <https://github.com/pymc-devs/resources/tree/master/Rethinking>`__\n-  `PyMC3 port of the book \"Bayesian Cognitive Modeling\" by Michael Lee and EJ Wagenmakers <https://github.com/pymc-devs/resources/tree/master/BCM>`__: Focused on using Bayesian statistics in cognitive modeling.\n-  `Bayesian Analysis with Python  <https://www.packtpub.com/big-data-and-business-intelligence/bayesian-analysis-python-second-edition>`__ (second edition) by Osvaldo Martin: Great introductory book. (`code <https://github.com/aloctavodia/BAP>`__ and errata).\n\nPyMC3 talks\n-----------\n\nThere are also several talks on PyMC3 which are gathered in this `YouTube playlist <https://www.youtube.com/playlist?list=PL1Ma_1DBbE82OVW8Fz_6Ts1oOeyOAiovy>`__\n\nInstallation\n============\n\nThe latest release of PyMC3 can be installed from PyPI using ``pip``:\n\n::\n\n    pip install pymc3\n\n**Note:** Running ``pip install pymc`` will install PyMC 2.3, not PyMC3,\nfrom PyPI.\n\nOr via conda-forge:\n\n::\n\n    conda install -c conda-forge pymc3\n\nPlotting is done using `ArviZ <https://arviz-devs.github.io/arviz/>`__\nwhich may be installed separately, or along with PyMC3:\n\n::\n\n    pip install pymc3[plots]\n\nThe current development branch of PyMC3 can be installed from GitHub, also using ``pip``:\n\n::\n\n    pip install git+https://github.com/pymc-devs/pymc3\n\nTo ensure the development branch of Theano is installed alongside PyMC3\n(recommended), you can install PyMC3 using the ``requirements.txt``\nfile. This requires cloning the repository to your computer:\n\n::\n\n    git clone https://github.com/pymc-devs/pymc3\n    cd pymc3\n    pip install -r requirements.txt\n\nHowever, if a recent version of Theano has already been installed on\nyour system, you can install PyMC3 directly from GitHub.\n\nAnother option is to clone the repository and install PyMC3 using\n``python setup.py install`` or ``python setup.py develop``.\n\n\nDependencies\n============\n\nPyMC3 is tested on Python 3.6 and depends on Theano, NumPy,\nSciPy, and Pandas (see ``requirements.txt`` for version\ninformation).\n\nOptional\n--------\n\nIn addtion to the above dependencies, the GLM submodule relies on\n`Patsy <http://patsy.readthedocs.io/en/latest/>`__.\n\n\nCiting PyMC3\n============\n\nSalvatier J., Wiecki T.V., Fonnesbeck C. (2016) Probabilistic programming\nin Python using PyMC3. PeerJ Computer Science 2:e55\n`DOI: 10.7717/peerj-cs.55 <https://doi.org/10.7717/peerj-cs.55>`__.\n\nContact\n=======\n\nWe are using `discourse.pymc.io <https://discourse.pymc.io/>`__ as our main communication channel. You can also follow us on `Twitter @pymc_devs <https://twitter.com/pymc_devs>`__ for updates and other announcements.\n\nTo ask a question regarding modeling or usage of PyMC3 we encourage posting to our Discourse forum under the `\u201cQuestions\u201d Category <https://discourse.pymc.io/c/questions>`__. You can also suggest feature in the `\u201cDevelopment\u201d Category <https://discourse.pymc.io/c/development>`__.\n\nTo report an issue with PyMC3 please use the `issue tracker <https://github.com/pymc-devs/pymc3/issues>`__.\n\nFinally, if you need to get in touch for non-technical information about the project, `send us an e-mail <pymc.devs@gmail.com>`__.\n\nLicense\n=======\n\n`Apache License, Version\n2.0 <https://github.com/pymc-devs/pymc3/blob/master/LICENSE>`__\n\n\nSoftware using PyMC3\n====================\n\n- `Exoplanet <https://github.com/dfm/exoplanet>`__: a toolkit for modeling of transit and/or radial velocity observations of exoplanets and other astronomical time series.\n- `Bambi <https://github.com/bambinos/bambi>`__: BAyesian Model-Building Interface (BAMBI) in Python.\n- `pymc3_models <https://github.com/parsing-science/pymc3_models>`__: Custom PyMC3 models built on top of the scikit-learn API.\n- `PMProphet <https://github.com/luke14free/pm-prophet>`__: PyMC3 port of Facebook's Prophet model for timeseries modeling\n- `webmc3 <https://github.com/AustinRochford/webmc3>`__: A web interface for exploring PyMC3 traces\n- `sampled <https://github.com/ColCarroll/sampled>`__: Decorator for PyMC3 models.\n- `NiPyMC <https://github.com/PsychoinformaticsLab/nipymc>`__: Bayesian mixed-effects modeling of fMRI data in Python.\n- `beat <https://github.com/hvasbath/beat>`__: Bayesian Earthquake Analysis Tool.\n\nPlease contact us if your software is not listed here.\n\nPapers citing PyMC3\n===================\n\nSee `Google Scholar <https://scholar.google.de/scholar?oi=bibs&hl=en&authuser=1&cites=6936955228135731011>`__ for a continuously updated list.\n\nContributors\n============\n\nSee the `GitHub contributor\npage <https://github.com/pymc-devs/pymc3/graphs/contributors>`__\n\nSupport\n=======\n\nPyMC3 is a non-profit project under NumFOCUS umbrella. If you want to support PyMC3 financially, you can donate `here <https://numfocus.salsalabs.org/donate-to-pymc3/index.html>`__.\n\nSponsors\n========\n\n|NumFOCUS|\n\n|Quantopian|\n\n|ODSC|\n\n.. |Binder| image:: https://mybinder.org/badge_logo.svg\n   :target: https://mybinder.org/v2/gh/pymc-devs/pymc3/master?filepath=%2Fdocs%2Fsource%2Fnotebooks\n.. |Build Status| image:: https://travis-ci.org/pymc-devs/pymc3.svg?branch=master\n   :target: https://travis-ci.org/pymc-devs/pymc3\n.. |Coverage| image:: https://codecov.io/gh/pymc-devs/pymc3/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/pymc-devs/pymc3\n.. |Dockerhub| image:: https://img.shields.io/docker/automated/pymc/pymc3.svg\n  :target: https://hub.docker.com/r/pymc/pymc3\n.. |NumFOCUS| image:: https://www.numfocus.org/wp-content/uploads/2017/03/1457562110.png\n   :target: http://www.numfocus.org/\n.. |Quantopian| image:: https://raw.githubusercontent.com/pymc-devs/pymc3/master/docs/quantopianlogo.jpg\n   :target: https://quantopian.com\n.. |NumFOCUS_badge| image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A\n   :target: http://www.numfocus.org/\n.. |ODSC| image:: https://raw.githubusercontent.com/pymc-devs/pymc3/master/docs/odsc_logo.png\n   :target: https://odsc.com\n"}}}