{"results": {"content_files": {"name": "README.md", "path": "README.md", "content": "# Pandas Profiling\n\n![Pandas Profiling Logo Header](http://pandas-profiling.github.io/pandas-profiling/docs/assets/logo_header.png)\n\n[![Build Status](https://travis-ci.com/pandas-profiling/pandas-profiling.svg?branch=master)](https://travis-ci.com/pandas-profiling/pandas-profiling)\n[![Code Coverage](https://codecov.io/gh/pandas-profiling/pandas-profiling/branch/master/graph/badge.svg?token=gMptB4YUnF)](https://codecov.io/gh/pandas-profiling/pandas-profiling)\n[![Release Version](https://img.shields.io/github/release/pandas-profiling/pandas-profiling.svg)](https://github.com/pandas-profiling/pandas-profiling/releases)\n[![Python Version](https://img.shields.io/pypi/pyversions/pandas-profiling)](https://pypi.org/project/pandas-profiling/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\nGenerates profile reports from a pandas `DataFrame`. \nThe pandas `df.describe()` function is great but a little basic for serious exploratory data analysis. \n`pandas_profiling` extends the pandas DataFrame with `df.profile_report()` for quick data analysis.\n\nFor each column the following statistics - if relevant for the column type - are presented in an interactive HTML report:\n\n* **Type inference**: detect the [types](#types) of columns in a dataframe.\n* **Essentials**: type, unique values, missing values\n* **Quantile statistics** like minimum value, Q1, median, Q3, maximum, range, interquartile range\n* **Descriptive statistics** like mean, mode, standard deviation, sum, median absolute deviation, coefficient of variation, kurtosis, skewness\n* **Most frequent values**\n* **Histogram**\n* **Correlations** highlighting of highly correlated variables, Spearman, Pearson and Kendall matrices\n* **Missing values** matrix, count, heatmap and dendrogram of missing values\n* **Text analysis** learn about categories (Uppercase, Space), scripts (Latin, Cyrillic) and blocks (ASCII) of text data.\n\n## Announcements\n\n### New in v2.6.0\n\n#### Dependency policy\nThe current dependency policy is suboptimal. Pinning the dependencies is great for reproducibility (high guarantee to work), but on the downside requires frequent maintenance and introduces compatibility issues with other packages. Therefore, we are moving away from pinning dependencies and instead specify a minimum version. \n\n#### Pandas v1\nEarly releases of pandas v1 demonstrated many regressions that broke functionality (as acknowledged by the authors [here](https://github.com/pandas-dev/pandas/issues/31523). At this point, pandas is more stable and we notice high demand for compatibility. We move on to support pandas' latest versions. To ensure compatibility with both versions, we have extended the test matrix to test against both pandas 0.x.y and 1.x.y.\n\n#### Python 3.6+ features\nPython 3.6 introduces ordered dicts and f-strings, which we now rely on. This means that from pandas-profiling 2.6, you should minimally run Python 3.6. For users that for some reason cannot update, you can use pandas-profiling 2.5.0, but you unfortunately won't benefit from updates or maintenance.\n\n#### Extended continuous integration\nStarting from this release, we use Github Actions and Travis CI combined to increase maintainability. \nTravis CI handles the testing, Github Actions automates part of the development process by running black and building the docs.\n\n### Support `pandas-profiling`\nWith your help, we got approved for [GitHub Sponsors](https://github.com/sponsors/sbrugman)! \nIt's extra exciting that GitHub **matches your contribution** for the first year.\nTherefore, we welcome you to support the project through GitHub! \n\nFind more information here:\n\n - [Sponsor the project on GitHub](https://github.com/sponsors/sbrugman)\n - [Read the release notes v2.6.0](https://github.com/pandas-profiling/pandas-profiling/releases/tag/v2.6.0) \n\n *April 14, 2020 \ud83d\udc98*\n\n---\n\n_Contents:_ **[Examples](#examples)** |\n**[Installation](#installation)** | **[Documentation](#documentation)** |\n**[Large datasets](#large-datasets)** | **[Command line usage](#command-line-usage)** |\n**[Advanced usage](#advanced-usage)** |\n**[Types](#types)** | **[How to contribute](#how-to-contribute)** |\n**[Editor Integration](#editor-integration)** | **[Dependencies](#dependencies)**\n\n---\n\n## Examples\n\nThe following examples can give you an impression of what the package can do:\n\n* [Census Income](http://pandas-profiling.github.io/pandas-profiling/examples/census/census_report.html) (US Adult Census data relating income)\n* [NASA Meteorites](http://pandas-profiling.github.io/pandas-profiling/examples/meteorites/meteorites_report.html) (comprehensive set of meteorite landings) [![Open In Colab](https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/github/pandas-profiling/pandas-profiling/blob/master/examples/meteorites/meteorites.ipynb) [![Binder](https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667)](https://mybinder.org/v2/gh/pandas-profiling/pandas-profiling/master?filepath=examples%2Fmeteorites%2Fmeteorites.ipynb)\n* [Titanic](http://pandas-profiling.github.io/pandas-profiling/examples/titanic/titanic_report.html) (the \"Wonderwall\" of datasets) [![Open In Colab](https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/github/pandas-profiling/pandas-profiling/blob/master/examples/titanic/titanic.ipynb) [![Binder](https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667)](https://mybinder.org/v2/gh/pandas-profiling/pandas-profiling/master?filepath=examples%2Ftitanic%2Ftitanic.ipynb)\n* [NZA](http://pandas-profiling.github.io/pandas-profiling/examples/nza/nza_report.html) (open data from the Dutch Healthcare Authority)\n* [Stata Auto](http://pandas-profiling.github.io/pandas-profiling/examples/stata_auto/stata_auto_report.html) (1978 Automobile data)\n* [Vektis](http://pandas-profiling.github.io/pandas-profiling/examples/vektis/vektis_report.html) (Vektis Dutch Healthcare data)\n* [Website Inaccessibility](http://pandas-profiling.github.io/pandas-profiling/examples/website_inaccessibility/website_inaccessibility_report.html) (demonstrates the URL type)\n* [Colors](http://pandas-profiling.github.io/pandas-profiling/examples/colors/colors_report.html) (a simple colors dataset)\n* [Russian Vocabulary](http://pandas-profiling.github.io/pandas-profiling/examples/russian_vocabulary/russian_vocabulary.html) (demonstrates text analysis)\n* [Orange prices](http://pandas-profiling.github.io/pandas-profiling/examples/themes/united_report.html) and [Coal prices](http://pandas-profiling.github.io/pandas-profiling/examples/themes/flatly_report.html) (showcase report themes)\n* [Tutorial: report structure using Kaggle data (advanced)](http://pandas-profiling.github.io/pandas-profiling/examples/kaggle/modify_report_structure.ipynb) (modify the report's structure) [![Open In Colab](https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/github/pandas-profiling/pandas-profiling/blob/master/examples/kaggle/modify_report_structure.ipynb) [![Binder](https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667)](https://mybinder.org/v2/gh/pandas-profiling/pandas-profiling/master?filepath=examples%2Fkaggle%2Fmodify_report_structure.ipynb)\n\n## Installation\n\n### Using pip\n\n[![PyPi Downloads](https://pepy.tech/badge/pandas-profiling)](https://pepy.tech/project/pandas-profiling)\n[![PyPi Monthly Downloads](https://pepy.tech/badge/pandas-profiling/month)](https://pepy.tech/project/pandas-profiling/month)\n[![PyPi Version](https://badge.fury.io/py/pandas-profiling.svg)](https://pypi.org/project/pandas-profiling/)\n\nYou can install using the pip package manager by running\n\n    pip install pandas-profiling[notebook,html]\n    \nAlternatively, you could install the latest version directly from Github:\n\n    pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip\n    \n    \n### Using conda\n\n[![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/pandas-profiling.svg)](https://anaconda.org/conda-forge/pandas-profiling)\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/pandas-profiling.svg)](https://anaconda.org/conda-forge/pandas-profiling) \n \nYou can install using the conda package manager by running\n\n    conda install -c conda-forge pandas-profiling\n\n### From source\n\nDownload the source code by cloning the repository or by pressing ['Download ZIP'](https://github.com/pandas-profiling/pandas-profiling/archive/master.zip) on this page. \nInstall by navigating to the proper directory and running\n\n    python setup.py install\n    \n## Documentation\n\nThe documentation for `pandas_profiling` can be found [here](https://pandas-profiling.github.io/pandas-profiling/docs/).\n\n### Getting started\n\nStart by loading in your pandas DataFrame, e.g. by using\n```python\nimport numpy as np\nimport pandas as pd\nfrom pandas_profiling import ProfileReport\n\ndf = pd.DataFrame(\n    np.random.rand(100, 5),\n    columns=['a', 'b', 'c', 'd', 'e']\n)\n```\nTo generate the report, run:\n```python\nprofile = ProfileReport(df, title='Pandas Profiling Report', html={'style':{'full_width':True}})\n```\n\n#### Jupyter Notebook\n\nWe recommend generating reports interactively by using the Jupyter notebook. \nThere are two interfaces (see animations below): through widgets and through a HTML report.\n\n<img alt=\"Notebook Widgets\" src=\"http://pandas-profiling.github.io/pandas-profiling/docs/assets/widgets.gif\" width=\"800\" />\n\nThis is achieved by simply displaying the report. In the Jupyter Notebook, run:\n```python\nprofile.to_widgets()\n```\n\nThe HTML report can be included in a Juyter notebook:\n\n<img alt=\"HTML\" src=\"http://pandas-profiling.github.io/pandas-profiling/docs/assets/iframe.gif\" width=\"800\" />\n\nRun the following code:\n\n```python\nprofile.to_notebook_iframe()\n```\n\n#### Saving the report\n\nIf you want to generate a HTML report file, save the `ProfileReport` to an object and use the `to_file()` function:\n```python\nprofile.to_file(output_file=\"your_report.html\")\n```\nAlternatively, you can obtain the data as json:\n```python\n# As a string\njson_data = profile.to_json()\n\n# As a file\nprofile.to_file(output_file=\"your_report.json\")\n```\n\n### Large datasets\n\nVersion 2.4 introduces minimal mode. \nThis is a default configuration that disables expensive computations (such as correlations and dynamic binning).\nUse the following syntax:\n\n```python\nprofile = ProfileReport(large_dataset, minimal=True)\nprofile.to_file(output_file=\"output.html\")\n```\n\n### Command line usage\n\nFor standard formatted CSV files that can be read immediately by pandas, you can use the `pandas_profiling` executable. Run\n\n\tpandas_profiling -h\n\nfor information about options and arguments.\n\n### Advanced usage\n\nA set of options is available in order to adapt the report generated.\n\n* `title` (`str`): Title for the report ('Pandas Profiling Report' by default).\n* `pool_size` (`int`): Number of workers in thread pool. When set to zero, it is set to the number of CPUs available (0 by default).\n* `progress_bar` (`bool`): If True, `pandas-profiling` will display a progress bar.\n\nMore settings can be found in the [default configuration file](https://github.com/pandas-profiling/pandas-profiling/blob/master/src/pandas_profiling/config_default.yaml), [minimal configuration file](https://github.com/pandas-profiling/pandas-profiling/blob/master/src/pandas_profiling/config_minimal.yaml) and [dark themed configuration file](https://github.com/pandas-profiling/pandas-profiling/blob/master/src/pandas_profiling/config_dark.yaml).\n\n__Example__\n```python\nprofile = df.profile_report(title='Pandas Profiling Report', plot={'histogram': {'bins': 8}})\nprofile.to_file(output_file=\"output.html\")\n```\n\n## Types\n\nTypes are a powerful abstraction for effective data analysis, that goes beyond the logical data types (integer, float etc.).\n`pandas-profiling` currently recognizes the following types:\n\n- Boolean\n- Numerical\n- Date\n- Categorical\n- URL\n- Path\n\nWe have developed a type system for Python, tailored for data analysis: [visions](https://github.com/dylan-profiler/visions).\nSelecting the right typeset drastically reduces the complexity the code of your analysis.\nFuture versions of `pandas-profiling` will have extended type support through `visions`!\n\n## How to contribute\n\n[![Questions: Stackoverflow \"pandas-profiling\"](https://img.shields.io/badge/stackoverflow%20tag-pandas%20profiling-yellow)](https://stackoverflow.com/questions/tagged/pandas-profiling)\n\nThe package is actively maintained and developed as open-source software. \nIf `pandas-profiling` was helpful or interesting to you, you might want to get involved. \nThere are several ways of contributing and helping our thousands of users.\nIf you would like to be a industry partner or sponsor, please [drop us a line](mailto:pandasprofiling@gmail.com).\n\nThe documentation is generated using [`pdoc3`](https://github.com/pdoc3/pdoc). \nIf you are contributing to this project, you can rebuild the documentation using:\n```\nmake docs\n```\nor on Windows:\n```\nmake.bat docs\n```\n\nRead more on getting involved in the [Contribution Guide](https://github.com/pandas-profiling/pandas-profiling/blob/master/CONTRIBUTING.md).\n\n\n## Editor integration\n### PyCharm integration \n1. Install `pandas-profiling` via the instructions above\n2. Locate your `pandas-profiling` executable.\n\n\t  On macOS / Linux / BSD:\n\t\n\t```console\n\t$ which pandas_profiling\n\t(example) /usr/local/bin/pandas_profiling\n\t```\n\t\n\t  On Windows:\n\t\n\t```console\n\t$ where pandas_profiling\n\t(example) C:\\ProgramData\\Anaconda3\\Scripts\\pandas_profiling.exe\n\t```\n\n2. In Pycharm, go to _Settings_ (or _Preferences_ on macOS) > _Tools_ > _External tools_\n3. Click the _+_ icon to add a new external tool\n4. Insert the following values\n\t- Name: Pandas Profiling\n    - Program: *__The location obtained in step 2__*\n    - Arguments: \"$FilePath$\" \"$FileDir$/$FileNameWithoutAllExtensions$_report.html\"\n    - Working Directory: $ProjectFileDir$\n  \n<img alt=\"PyCharm Integration\" src=\"http://pandas-profiling.github.io/pandas-profiling/docs/assets/pycharm-integration.png\" width=\"400\" />\n  \nTo use the PyCharm Integration, right click on any dataset file:\n_External Tools_ > _Pandas Profiling_.\n\n### Other integrations\n\nOther editor integrations may be contributed via pull requests.\n\n## Dependencies\n\nThe profile report is written in HTML and CSS, which means pandas-profiling requires a modern browser. \n\nYou need [Python 3](https://python3statement.org/) to run this package. Other dependencies can be found in the requirements files:\n\n| Filename | Requirements|\n|----------|-------------|\n| [requirements.txt](https://github.com/pandas-profiling/pandas-profiling/blob/master/requirements.txt) | Package requirements|\n| [requirements-dev.txt](https://github.com/pandas-profiling/pandas-profiling/blob/master/requirements-dev.txt)  |  Requirements for development|\n| [requirements-test.txt](https://github.com/pandas-profiling/pandas-profiling/blob/master/requirements-test.txt) | Requirements for testing|\n| [setup.py](https://github.com/pandas-profiling/pandas-profiling/blob/master/setup.py) | Requirements for Widgets etc. |\n"}}}