{"results": {"content_files": {"name": "README.md", "path": "README.md", "content": "word2vec\n========\n\n[![travis-ci](https://api.travis-ci.org/danielfrg/word2vec.svg)](https://travis-ci.org/danielfrg/word2vec)\n\nPython interface to Google word2vec.\n\nTraining is done using the original C code, other functionality is pure Python with numpy.\n\n## Installation\n\n```\npip install word2vec\n```\n\nThe installation requires to compile the original C code:\n\n1. The requirements are `gcc` and `Cython` - Run `pip install Cython` prior to the installation.\n2. You can override the compilation flags if needed: `W2V_CFLAGS='-march=corei7' pip install word2vec`\n\n**Windows:** There is some support for this support based on this [win32 port](https://github.com/zhangyafeikimi/word2vec-win32). Use at your own risk.\n\n## Usage\n\nLook at this example:\n[word2vec](http://nbviewer.ipython.org/urls/raw.github.com/danielfrg/word2vec/master/examples/word2vec.ipynb)\n\nThe default functionality from word2vec is also available from the command line as:\n- word2vec\n- word2phrase\n- word2vec-distance\n- word2vec-word-analogy\n- word2vec-compute-accuracy\n\nExperimental functionality on doc2vec can be found in this other example:\n[doc2vec](http://nbviewer.ipython.org/urls/raw.github.com/danielfrg/word2vec/master/examples/doc2vec.ipynb)\n"}}}